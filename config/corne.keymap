/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LYR_DEFAULT 0
#define LYR_LOWER 1
#define LYR_UPPER 2
#define LYR_SYMBOL 3
#define LYR_SYSTEM 4

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        system_layer {
            if-layers = <LYR_LOWER LYR_UPPER>;
            then-layer = <LYR_SYSTEM>;
        };
    };

    macros {
        m_next: m_next {
            label = "M_NEXT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RC(TAB)>,
                <&macro_release>,
                <&kp RC(TAB)>;
        };
        m_prev: m_prev {
            label = "M_PREV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LC(LS(TAB))>,
                <&macro_release>,
                <&kp LC(LS(TAB))>;
        };
    };

    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        gqtr: global-quick-tap-retro {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            global-quick-tap;
            retro-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        mtq: mod-tap-quick {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_QUICK";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            bindings =
                <&kp>,
                <&kp>;

            retro-tap;
        };
        left_mods: left-mods {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_MODS";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings =
                <&kp LGUI>,
                <&kp LCTRL>,
                <&kp LALT>;
        };
        right_mods: right-mods {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_MODS";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings =
                <&kp RGUI>,
                <&kp RCTRL>,
                <&kp RALT>;
        };
        dn_lyr_tap: dn-lyr-tap {
            compatible = "zmk,behavior-tap-dance";
            label = "DN_LYR_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings =
                <&mo 1>,
                <&mo 3>;
        };
        up_lyr_tap: up-lyr-tap {
            compatible = "zmk,behavior-tap-dance";
            label = "UP_LYR_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings =
                <&mo 2>,
                <&mo 3>;
        };
        rsh_caps_word: rsh_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "RSH_CAPS_WORD";
            #binding-cells = <0>;
            bindings =
                <&kp RSHIFT>,
                <&caps_word>;

            tapping-term-ms = <350>;
        };
        lsh_caps: lsh_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "LSH_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings =
                <&kp LSHIFT>,
                <&kp CAPS>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp TAB  &kp Q  &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BACKSLASH
 &kp LALT  &kp A  &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI       &kp APOS
&kp LSHFT  &kp Z  &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH      &kp RSHFT
                         &kp LGUI  &mo 1  &kp LCTRL  &kp SPACE  &mo 2   &kp RGUI
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE        &kp N1        &kp N2    &kp N3     &kp N4     &kp N5     &kp N6            &kp N7             &kp N8     &kp N9     &kp N0  &kp DEL
  &kp ESC  &kp C_VOL_DN  &kp C_VOL_UP   &m_prev    &m_next     &trans     &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL   &trans
   &trans        &trans      &kp LGUI  &kp LALT  &kp LCTRL     &trans     &trans            &trans             &trans     &trans     &trans   &trans
                                         &trans     &trans  &kp UNDER  &kp UNDER            &trans             &trans
            >;
        };

        upper_layer {
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp POUND  &kp DOLLAR  &kp PERCENT  &kp CARET   &kp AMPS  &kp ASTERISK   &kp LPAR   &kp RPAR  &kp BACKSPACE
  &kp ESC    &trans  &trans     &trans      &trans       &trans   &kp LEFT   &kp DOWN        &kp UP  &kp RIGHT  &kp ENTER         &trans
   &trans    &trans  &trans     &trans      &trans       &trans     &trans  &kp RCTRL      &kp RALT   &kp RGUI     &trans         &trans
                                &trans      &trans    &kp UNDER  &kp UNDER     &trans        &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
   &trans    &trans  &trans    &trans    &trans     &trans     &trans    &trans    &trans    &trans    &trans  &trans
   &trans    &trans  &trans    &trans    &trans     &trans     &trans    &trans    &trans    &trans    &trans  &trans
                               &trans    &trans     &trans     &trans    &trans    &trans
            >;
        };

        system_layer {
            bindings = <
  &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &kp F6   &kp F7   &kp F8   &kp F9  &kp F10      &trans
  &trans       &kp F11       &kp F12       &kp F13       &kp F14       &kp F15  &kp F16  &kp F17  &kp F18  &kp F19  &kp F20      &trans
&kp CAPS  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &trans   &trans   &trans   &trans   &trans  &caps_word
                                            &trans        &trans    &bt BT_CLR   &trans   &trans   &trans
            >;
        };
    };
};
