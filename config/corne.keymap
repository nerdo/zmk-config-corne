/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        m_next: m_next {
            label = "M_NEXT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RC(TAB)>,
                <&macro_release>,
                <&kp RC(TAB)>;
        };
        m_prev: m_prev {
            label = "M_PREV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LC(LS(TAB))>,
                <&macro_release>,
                <&kp LC(LS(TAB))>;
        };
    };

    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        gqtr: global-quick-tap-retro {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            global-quick-tap;
            retro-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        mtq: mod-tap-quick {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_QUICK";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            bindings =
                <&kp>,
                <&kp>;

            retro-tap;
        };
    };

    combos {
        compatible = "zmk,combos";

        underscore_left {
            bindings = <&kp UNDER>;
            key-positions = <38 40>;
        };

        underscore_right {
            bindings = <&kp UNDER>;
            key-positions = <39 37>;
        };

        delete_left {
            bindings = <&kp DEL>;
            key-positions = <24 37 11>;
        };

        delete_right {
            bindings = <&kp DEL>;
            key-positions = <40 35 11>;
        };

        nav_prev {
            bindings = <&m_prev>;
            key-positions = <18 40 36>;
        };

        nav_next {
            bindings = <&m_next>;
            key-positions = <21 40 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &gqt LALT TAB  &kp Q  &kp W         &kp E  &kp R      &kp T      &kp Y  &kp U          &kp I    &kp O     &kp P  &gqt RALT BACKSLASH
&gqt LCTRL ESC  &kp A  &kp S         &kp D  &kp F      &kp G      &kp H  &kp J          &kp K    &kp L  &kp SEMI      &gqt RCTRL APOS
     &kp LSHFT  &kp Z  &kp X         &kp C  &kp V      &kp B      &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH     &mtq RSHFT ENTER
                              &kp LEFT_GUI  &mo 1  &kp SPACE  &kp SPACE  &mo 2  &kp RIGHT_GUI
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6            &kp N7             &kp N8     &kp N9     &kp N0  &kp BACKSPACE
   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL         &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans             &trans     &trans     &trans         &trans
                           &trans  &trans  &trans  &trans            &trans             &trans
            >;
        };

        upper_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7  &kp N8     &kp N9  &kp N0  &kp BACKSPACE
   &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans         &trans
   &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans         &trans
                           &trans  &trans  &trans    &trans    &trans  &trans
            >;
        };

        system_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
