/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LYR_DEFAULT 0
#define LYR_LOWER 1
#define LYR_UPPER 2
#define LYR_SYSTEM 3

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        system_layer {
            if-layers = <LYR_LOWER LYR_UPPER>;
            then-layer = <LYR_SYSTEM>;
        };
    };

    macros {
        m_next: m_next {
            label = "M_NEXT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RC(TAB)>,
                <&macro_release>,
                <&kp RC(TAB)>;
        };
        m_prev: m_prev {
            label = "M_PREV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LC(LS(TAB))>,
                <&macro_release>,
                <&kp LC(LS(TAB))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp TAB  &kp Q  &kp W     &kp E  &kp R      &kp T        &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BACKSLASH
 &kp LALT  &kp A  &kp S     &kp D  &kp F      &kp G        &kp H  &kp J      &kp K    &kp L  &kp SEMI       &kp APOS
&kp LSHFT  &kp Z  &kp X     &kp C  &kp V      &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH      &kp RSHFT
                         &kp LGUI  &mo 1  &kp LCTRL    &kp SPACE  &mo 2   &kp RGUI
            >;
        };

        lower_layer {
            bindings = <
&kp TILDE  &kp EXCL    &kp AT  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET          &kp AMPS       &kp ASTERISK   &kp LPAR   &kp RPAR  &kp DELETE
  &kp ESC    &trans    &trans     &trans      &trans       &trans       &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL      &trans
   &trans    &trans  &kp LGUI   &kp LALT   &kp LCTRL       &trans       &trans    &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp UNDER   &kp PLUS      &trans
                                  &trans      &trans       &trans       &trans            &trans             &trans
            >;
        };

        upper_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2   &kp N3            &kp N4        &kp N5      &kp N6     &kp N7    &kp N8     &kp N9  &kp N0  &kp BACKSPACE
  &kp ESC  &trans  &trans  &m_prev           &m_next  &kp C_VOL_UP    &kp LEFT   &kp DOWN    &kp UP  &kp RIGHT  &trans         &trans
   &trans  &trans  &trans   &trans  &kp C_PLAY_PAUSE  &kp C_VOL_DN      &trans  &kp RCTRL  &kp RALT   &kp RGUI  &trans      &kp ENTER
                            &trans            &trans        &trans      &trans     &trans    &trans
            >;
        };

        system_layer {
            bindings = <
  &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5     &kp F6   &kp F7   &kp F8   &kp F9  &kp F10      &trans
  &trans       &kp F11       &kp F12       &kp F13       &kp F14       &kp F15    &kp F16  &kp F17  &kp F18  &kp F19  &kp F20      &trans
&kp CAPS  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans   &trans   &trans   &trans   &trans  &caps_word
                                            &trans        &trans    &bt BT_CLR     &trans   &trans   &trans
            >;
        };
    };
};
